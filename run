#!/usr/bin/env ruby
require 'rubygems'
require 'fileutils'
require 'orpium'
require 'term/ansicolor'
require 'restclient'

class String
  include Term::ANSIColor
end

config = YAML.load_file 'profiles/default.yml'

FileUtils.mkdir_p 'build/srpms'
FileUtils.mkdir_p 'build/rpms'
FileUtils.mkdir_p 'build/repos'
FileUtils.mkdir_p 'build/repos-ee'
FileUtils.mkdir_p 'build/archive/RPMS'
FileUtils.mkdir_p 'build/archive/SRPMS'

# Archive old builds
FileUtils.mv 'build/rpms/*.rpm', 'build/archive/RPMS'
FileUtils.mv 'build/srpms/*.rpm', 'build/archive/SRPMS'

# Clean ~/rpmbuild
puts
puts "Cleaning rpmbuild tree..."
puts
rpmbuild_dir = "#{ENV['HOME']}/rpmbuild"
%w(SRPMS SPECS SOURCES BUILD BUILDROOT RPMS).each do |d|
  dir = File.join(rpmbuild_dir, d)
  FileUtils.rm_rf dir
  Dir.mkdir dir
end

if config[:clean_previous_build]
  puts
  puts "Cleaning previous build..."
  puts
  # Clean old SRPMS
  Dir["build/srpms/*.rpm"].each do |f|
    FileUtils.rm_f f
  end

  # Clean old RPMS
  Dir["build/rpms/*.rpm"].each do |f|
    FileUtils.rm_f f
  end
end

if config[:run_steps][:clone_common_repos]
  puts
  puts "Clone/Update common repos".bold
  puts
  require 'lib/clone-common-repos'
end

if config[:run_steps][:clone_private_repos]
  puts
  puts "Clone/Update private repos".bold
  puts
  require 'lib/clone-private-repos'
end

if config[:run_steps][:update_platform_sources]
  puts
  puts "Updating platform sources".bold
  puts
  require 'lib/update-platform-sources'
end

if config[:run_steps][:create_srpms]
  puts
  puts "Create SRPMS".bold
  puts
  require 'lib/create-srpms'
end

if config[:run_steps][:build_rpms]
  puts
  puts "Build RPMS".bold
  puts
  require 'lib/build-rpms'
end

Dir.chdir 'build/rpms'
`createrepo --update -d . `
